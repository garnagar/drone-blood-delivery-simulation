@startuml
abstract class "Vehicle" {
id: int
km_consumption: float
km_emissions: float
total_carrying_capacity: int
current_carrying_capacity: int
is_available: bool

{abstract} get_eta(origin, destination)
{abstract} calculate_delivery_cost(origin, destination)
{abstract} calculate_delivery_emissions(origin, destination)
{abstract} get_distance(origin, destination)
}

class "Hospital" {
hospitalID: int
plot: Plot
resource_amount: int
location: Dict<lat, long>
distr_center: DistributionCenter
mode: string

blood_request_generator(env, blood_req_tseries, mode)
}

class "DistributionCenter" {
id: int
plot: Plot
location: Dict<lat, long>
drones: Drone[]
ambulances: Ambulance[]
drones_resource: simpy.Resource
ambulances_resource: simpy.Resource
mode: string

get_drone_highest_battery()
get_ambulance()
process_blood_request(env, hospital, amount, mode)
}

class "Ambulance" extends Vehicle {
fuel_capacity: float
current_fuel_capacity: float

calculate_delivery_fuel_consumption(origin, destination)
get_distance(origin, destination)
get_eta(origin, destination)
calculate_delivery_cost(origin, destination)
calculate_delivery_emissions(origin, destination)

}

class "Drone" extends Vehicle {
current_battery: float
battery_capacity: float
total_carrying_capacity: float
charging_speed: float
speed: int

calculate_delivery_power_consumption(origin, destination)
charging_time()
get_distance(origin, destination)
get_eta(origin, destination)
calculate_delivery_cost(origin, destination)
calculate_delivery_emissions(origin, destination)

}


DistributionCenter "1" --> "1..*   " Hospital
DistributionCenter "1   " *-- "1..*" Vehicle
@enduml
